@use '../mixins/rem' as *;
@use '../mixins/focus-outline' as *;
@use '../mixins/button' as *;

@layer kol-theme-component {
	:host {
		font-family: var(--font-family);
	}

	nav {
		background-color: var(--color-mute);
	}

	ul {
		list-style: none;
	}

	.kol-link-wc {
		display: flex;
	}

	.entry-item a,
	.entry-item .button {
		align-items: center;
		color: var(--color-primary);
		display: flex;
		gap: rem(8);
		min-height: var(--a11y-min-size);
		text-decoration: none;

		.vertical & {
			border-left: 2px solid transparent;
			padding-left: rem(8);
		}

		.horizontal & {
			padding: 0 rem(16);
		}

		.vertical .active & {
			border-left-color: var(--color-primary);
		}

		&:focus-visible {
			@include focus-outline;
		}
	}

	.entry-item a:hover {
		text-decoration: underline;
	}

	// nested lists
	.list .list {
		padding-left: rem(16);
	}

	.active .entry-item a,
	.active .entry-item .button {
		font-weight: bold;
	}

	.active .list .entry-item a,
	.active .list .entry-item .button {
		font-weight: normal;
		border-left-color: transparent;
	}

	.expand-button {
		margin-left: rem(8);

		.button {
			&:hover {
				background-color: var(--color-primary);
				color: var(--color-light);
			}

			&:focus-visible {
				@include focus-outline;
			}
		}

		.button-inner {
			justify-content: center;
		}
	}

	.toggle-button :is(a, button) > .kol-span-wc,
	.toggle-button :is(a, button):disabled:hover > .kol-span-wc {
		color: var(--color-primary);
		font-weight: 700;
		min-height: var(--a11y-min-size);
		min-width: var(--a11y-min-size);
		border-color: var(--color-light);
		background-color: var(--color-light);
		border-radius: var(--border-radius);
		border-style: solid;
		box-shadow: none;
	}

	.toggle-button :is(a, button):active > .kol-span-wc,
	.toggle-button :is(a, button):hover > .kol-span-wc {
		background-color: var(--color-primary-variant);
		border-color: var(--color-primary-variant);
		box-shadow: 0 2px 8px 2px rgba(8, 35, 48, 0.24);
		color: var(--color-light);
	}
}
